apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.arny.mvpclean"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
            debuggable true
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile project(path: ':arnylib')
    compile "com.android.support:multidex:1.0.3"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // Tests
    testImplementation 'org.json:json:20140107'
    testImplementation "org.robolectric:robolectric:3.8"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.6.2'
    androidTestCompile 'com.squareup.assertj:assertj-android:1.2.0'
    androidTestCompile 'com.squareup.assertj:assertj-android-support-v4:1.2.0'
    testCompile  'org.mockito:mockito-core:2.15.0'
    androidTestCompile  'org.mockito:mockito-android:2.7.22'
    androidTestCompile 'com.android.support.test:runner:1.0.2'
    androidTestCompile 'com.android.support.test:rules:1.0.2'
    /*support*/
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:preference-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:1.1.0"
    /*ROOM DB*/
    implementation  "android.arch.persistence.room:runtime:$rootProject.archRoomVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.archRoomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.archRoomVersion"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.archRoomVersion"
    //di
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    provided 'org.glassfish:javax.annotation:10.0-b28'
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt  "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    kapt  "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt  "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
//
//
//    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
//    compile "com.google.dagger:dagger-android:$rootProject.daggerVersion"
//    compile "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
//    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    //custom
    compile 'com.redmadrobot:inputmask:3.3.0'

}
